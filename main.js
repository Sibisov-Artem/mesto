(()=>{"use strict";var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-btn",inactiveButtonClass:"popup__submit-btn_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},t=document.querySelector(".page").querySelector(".content").querySelector(".profile"),r=(document.querySelectorAll(".popup"),document.querySelector(".popup_profile")),n=(t.querySelector(".profile__name"),t.querySelector(".profile__description"),t.querySelector(".profile__edit-btn")),o=(r.querySelector(".popup__form_profile"),r.querySelector(".popup__input_el_name")),i=r.querySelector(".popup__input_el_description"),u=document.querySelector(".popup_mesto"),l=t.querySelector(".profile__add-btn"),c=document.querySelector(".place__grid"),a=(document.querySelector(".popup__form_mesto"),document.querySelector(".popup__input_el_mesto-title")),s=document.querySelector(".popup__input_el_mesto-url");function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,y(n.key),n)}}function y(e){var t=function(e,t){if("object"!==p(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===p(t)?t:String(t)}var m=function(){function e(t,r,n){var o,i,u,l=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,u=function(){l._element.querySelector(".place__wastebasket-btn").addEventListener("click",(function(){l._deleteClick()})),l._likeButton=l._element.querySelector(".place__like-btn"),l._likeButton.addEventListener("click",(function(){l._likeClick()})),l._cardImage.addEventListener("click",(function(){l._handleCardClick(l._name,l._link)}))},(i=y(i="_setEventListeners"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._name=t.name,this._link=t.link,this._templateSelector=r,this._handleCardClick=n}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place__card").cloneNode(!0)}},{key:"_deleteClick",value:function(){this._element.remove(),this._element=null}},{key:"_likeClick",value:function(){this._likeButton.classList.toggle("place__like-btn_active")}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._element.querySelector(".place__title").textContent=this._name,this._cardImage=this._element.querySelector(".place__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}}])&&f(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,d(n.key),n)}}function b(e,t,r){return(t=d(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function d(e){var t=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===_(t)?t:String(t)}var h=function(){function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"_showInputError",(function(e,t){var r=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(n._inputErrorClass),r.textContent=t,r.classList.add(n._errorClass)})),b(this,"_hideInputError",(function(e){var t=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(n._inputErrorClass),t.classList.remove(n._errorClass),t.textContent=""})),b(this,"_checkInputValidity",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e,e.validationMessage)})),b(this,"_hasInvalidInput",(function(){return n._inputList.some((function(e){return!e.validity.valid}))})),b(this,"_toggleButtonState",(function(){n._hasInvalidInput()?n._disabledSubmitButton():(n._buttonElement.classList.remove(n._inactiveButtonClass),n._buttonElement.removeAttribute("disabled","true"))})),b(this,"_setEventListeners",(function(){n._inputList.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e),n._toggleButtonState()}))}))})),b(this,"enableValidation",(function(){n._setEventListeners(),n._disabledSubmitButton()})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=r,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this._disabledSubmitButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_disabledSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","true")}}])&&v(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function g(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==S(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}var w=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=n,this._renderer=o,this._container=r}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&g(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}var j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._popupCloseButton=this._popup.querySelector(".popup__close-btn")}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_closeOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton.addEventListener("click",(function(){return e.close()})),this._popup.addEventListener("mousedown",this._closeOverlay.bind(this))}}])&&k(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},P.apply(this,arguments)}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(n);if(o){var r=q(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._previewImage=t._popup.querySelector(".popup__image"),t._imageCaption=t._popup.querySelector(".popup__image-caption"),t}return t=u,(r=[{key:"open",value:function(e,t){this._previewImage.src=t,this._previewImage.alt=e,this._imageCaption.textContent=e,P(q(u.prototype),"open",this).call(this)}}])&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(j);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},x.apply(this,arguments)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(n);if(o){var r=V(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===B(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._handleFormSubmit=t,r._form=r._popup.querySelector(".popup__form"),r._inputList=Array.from(r._form.querySelectorAll(".popup__input")),r}return t=u,(r=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;x(V(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"close",value:function(){x(V(u.prototype),"close",this).call(this),this._form.reset()}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(j);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===D(o)?o:String(o)),n)}var o}var U=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(t),this._userInfo=document.querySelector(r)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,info:this._userInfo.textContent}}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.info}}])&&N(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),F=new A(".popup_profile",(function(e){z.setUserInfo(e)}));F.setEventListeners();var z=new U(".profile__name",".profile__description"),M=new A(".popup_mesto",(function(e){K.addItem(J(e))}));M.setEventListeners();var G=new I(".popup_view");function H(e,t){G.open(e,t)}function J(e){return new m(e,".card-template",H).createCard()}G.setEventListeners();var K=new w({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){var t=J(e);K.addItem(t)}},c);K.renderItems();var Q=new h(e,r);Q.enableValidation();var W=new h(e,u);W.enableValidation(),n.addEventListener("click",(function(){F.open();var e=z.getUserInfo();o.value=e.name,i.value=e.info,Q.resetValidation()})),l.addEventListener("click",(function(){M.open(),a.value="",s.value="",W.resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGtGQUVSLENBQ0VELEtBQU0sV0FDTkMsS0FBTSxvRkFFUixDQUNFRCxLQUFNLHFCQUNOQyxLQUFNLDZGQUVSLENBQ0VELEtBQU0sU0FDTkMsS0FBTSxrRlFlUm1ELFNBQVUsU0FBQ0ksR0FDVCxJQUFNa0QsRUFBT0gsRUFBVy9DLEdBQ3hCNkMsRUFBVUMsUUFBUUksRUFFcEIsR0FDQzdILEdBR0h3SCxFQUFVTSxjQUtWLElBQU1DLEVBQW1CLElBQUk3RixFQUFjbkQsRUFBYVUsR0FDeERzSSxFQUFpQkMsbUJBSWpCLElBQU1DLEVBQW1CLElBQUkvRixFQUFjbkQsRUFBYWUsR0FDeERtSSxFQUFpQkQsbUJBT2pCckksRUFBa0JlLGlCQUFpQixTQUFTLFdBQzFDeUcsRUFBa0JTLE9BQ2xCLElBQU1NLEVBQWNkLEVBQVNlLGNBQzdCdkksRUFBaUIyQixNQUFRMkcsRUFBWS9HLEtBQ3JDdEIsRUFBd0IwQixNQUFRMkcsRUFBWWhCLEtBRTVDYSxFQUFpQkssaUJBQ25CLElBSUFySSxFQUFjVyxpQkFBaUIsU0FBUyxXQUN0QzZHLEVBQWtCSyxPQUNsQjNILEVBQWtCc0IsTUFBUSxHQUMxQnJCLEVBQWdCcUIsTUFBUSxHQUN4QjBHLEVBQWlCRyxpQkFDbkIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge1xyXG4gIGluaXRpYWxDYXJkcyxcclxuICBmb3Jtc0NvbmZpZyxcclxuICBwYWdlLFxyXG4gIGNvbnRlbnQsXHJcbiAgcHJvZmlsZSxcclxuICBwcm9maWxlUG9wdXAsXHJcbiAgZWRpdFByb2ZpbGVCdXR0b24sXHJcbiAgcHJvZmlsZU5hbWVJbnB1dCxcclxuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCxcclxuICBuZXdDYXJkUG9wdXAsXHJcbiAgbmV3Q2FyZEJ1dHRvbixcclxuICBsaXN0Rm9yQ2FyZHMsXHJcbiAgbmV3Q2FyZEZvcm0sXHJcbiAgbmV3Q2FyZFRpdGxlSW5wdXQsXHJcbiAgbmV3Q2FyZFVybElucHV0LFxyXG5cclxufVxyXG5cclxuLy/QvdCw0LHQvtGAINC60LDRgNGC0L7Rh9C10Log0LTQu9GPINC+0YLQvtCx0YDQsNC20LXQvdC40Y9cclxuY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICfQkNGA0YXRi9C3JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYXJraHl6LmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQp9C10LvRj9Cx0LjQvdGB0LrQsNGPINC+0LHQu9Cw0YHRgtGMJyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvY2hlbHlhYmluc2stb2JsYXN0LmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQmNCy0LDQvdC+0LLQvicsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2l2YW5vdm8uanBnJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Ca0LDQvNGH0LDRgtC60LAnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9rYW1jaGF0a2EuanBnJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Cl0L7Qu9C80L7Qs9C+0YDRgdC60LjQuSDRgNCw0LnQvtC9JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2hvbG1vZ29yc2t5LXJheW9uLmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQkdCw0LnQutCw0LsnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9iYWlrYWwuanBnJ1xyXG4gIH1cclxuXTtcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8g0L7QsdGK0LXQutGCINC60LvQsNGB0YHQvtCyINC00LvRjyDQv9GA0LjQtdC80LAg0Log0YTRg9C90LrRhtC40LggZW5hYmxlVmFsaWRhdGlvblxyXG5jb25zdCBmb3Jtc0NvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLCAvLyDRhNC+0YDQvNCwXHJcbiAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLCAvL9C/0L7Qu9C1XHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX3N1Ym1pdC1idG4nLCAvL9C60L3QvtC/0LrQsCDRgdC+0YXRgNCw0L3QuNGC0Ywv0YHQvtC30LTQsNGC0YxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3N1Ym1pdC1idG5fZGlzYWJsZWQnLCAvLyDQvdC10LDQutGC0LjQstC90LDRjyDQutC90L7Qv9C60LBcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsIC8vIGlucHV0INCy0YvQtNC10LvQtdC90LjQtSDQv9C+0LvRjyDQutGA0LDRgdC90L7QuSDQu9C40L3QuNC10LksINC/0L7QutCw0LfRi9Cy0LDRjyDRh9GC0L4g0LXRgdGC0Ywg0L7RiNC40LHQutCwINCy0LDQu9C40LTQsNGG0LjQuFxyXG4gIGVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXQtZXJyb3JfYWN0aXZlJyAvLyDQtNC10LvQsNC10Lwg0YLQtdC60YHRgiDQvtGI0LjQsdC60Lgg0LIgc3BhbiDQv9C+0LQgaW5wdXQn0L7QvCDQstC40LTQuNC80YvQvCDQt9CwINGB0YfQtdGCIG9wYWNpdHk6MVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbmNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpO1xyXG5jb25zdCBjb250ZW50ID0gcGFnZS5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpO1xyXG5jb25zdCBwcm9maWxlID0gY29udGVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZScpO1xyXG5jb25zdCBwb3B1cEFsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cCcpOyAvLyDQuNGB0L/QvtC70YzQt9GD0Y4g0LTQu9GPINC30LDQutGA0YvRgtC40Y8g0L/QviDQvtCy0LXRgNC70LXRjlxyXG5cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3Qv9C+0L/QsNC/INC/0YDQvtGE0LjQu9GMLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5jb25zdCBwcm9maWxlUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfcHJvZmlsZScpOyAvL9C/0L7Qv9Cw0L8g0L/RgNC+0YTQuNC70Y9cclxuY29uc3QgcHJvZmlsZU5hbWUgPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7IC8v0LjQvNGPINC/0YDQvtGE0LjQu9GPXHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2Rlc2NyaXB0aW9uJyk7IC8v0L7Qv9C40YHQsNC90LjQtSDQv9GA0L7RhNC40LvRj1xyXG5jb25zdCBlZGl0UHJvZmlsZUJ1dHRvbiA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnRuJyk7ICAvL9C60L3QvtC/0LrQsCDQvtGC0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L8g0L/RgNC+0YTQuNC70Y9cclxuY29uc3QgcHJvZmlsZUZvcm0gPSBwcm9maWxlUG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX3Byb2ZpbGUnKTsgLy/RhNC+0YDQvNCwINC/0L7Qv9Cw0L8g0L/RgNC+0YTQuNC70Y9cclxuY29uc3QgcHJvZmlsZU5hbWVJbnB1dCA9IHByb2ZpbGVQb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2VsX25hbWUnKTsgLy/Qv9C+0LvQtSDQuNC80LXQvdC4INC/0YDQvtGE0LjQu9GPXHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gcHJvZmlsZVBvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfZWxfZGVzY3JpcHRpb24nKTsgLy/Qv9C+0LvQtSDQvtC/0LjRgdCw0L3QuNGPINC/0YDQvtGE0LjQu9GPXHJcblxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLdC/0L7Qv9Cw0L8g0YHQvtC30LTQsNC90LjRjyDQvdCy0L7QvtC5INC60LDRgNGC0L7Rh9C60LgtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuY29uc3QgbmV3Q2FyZFBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX21lc3RvJyk7IC8v0L/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvNC10YHRgtCwXHJcbmNvbnN0IG5ld0NhcmRCdXR0b24gPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hZGQtYnRuJyk7IC8v0LrQvdC+0L/QutCwINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvNC10YHRgtCwXHJcblxyXG5jb25zdCBsaXN0Rm9yQ2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGxhY2VfX2dyaWQnKTsgLy8g0YHQv9C40YHQvtC6LCDQstC90YPRgtGA0Ywg0LrQvtGC0L7RgNC+0LPQviDQsdGD0LTRg9GCINCy0YHRgtCw0LLQsNGC0Ywg0LrQsNGA0YLQvtGH0LrQuFxyXG5jb25zdCBuZXdDYXJkRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9tZXN0bycpOyAvL9GE0L7RgNC80LAg0L/QvtC/0LDQvyDQtNC+0LHQsNCy0LvQtdC90LjRjyDQvNC10YHRgtCwXHJcbmNvbnN0IG5ld0NhcmRUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF9lbF9tZXN0by10aXRsZScpOyAvL9C/0L7Qu9C1INC40LzQtdC90Lgg0LzQtdGB0YLQsFxyXG5jb25zdCBuZXdDYXJkVXJsSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2VsX21lc3RvLXVybCcpOyAvL9C/0L7Qu9C1INCw0LTRgNC10YHQsCDQutCw0YDRgtC40L3QutC4XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCB0ZW1wbGF0ZVNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgLy8gdGhpcy5fb3BlblByZXZpZXdQb3B1cCA9IG9wZW5QcmV2aWV3UG9wdXA7XG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuXG4gIH1cblxuICAvL9GB0L7Qt9C00LDQvdC40LUg0LrQvtC/0LjQuCB0ZW1wbGF0ZVxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX19jYXJkJykuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG4gIC8v0YTRg9C90LrRhtC40Y8g0YPQtNCw0LvQtdC90LjRjyDQv9C+INC60LvQuNC60YMg0L/QviDQutC+0YDQt9C40L3QutC1INGH0LXRgNC10LcgdGFyZ2V0INC4IGNsb3Nlc3Qg0LTQu9GPIGNyZWF0ZUNhcmRcbiAgX2RlbGV0ZUNsaWNrKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gIH1cblxuICAvLyDRhNGD0L3QutGG0LjRjyDQv9C10YDQtdC60LvRjtGH0LDRgtC10LvRjyDQu9Cw0LnQutC+0LIg0L3QsCDQutCw0YDRgtC+0YfQutC4INC00LvRjyBjcmVhdGVDYXJkXG4gIF9saWtlQ2xpY2soKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdwbGFjZV9fbGlrZS1idG5fYWN0aXZlJyk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgLy/Rg9C00LDQu9C10L3QuNC1INC60LDRgNGC0LjQvdC60Lgg0L/QviDQutC70LjQutGDINC90LAg0LrQvtGA0LfQuNC90LrRg1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX193YXN0ZWJhc2tldC1idG4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2RlbGV0ZUNsaWNrKClcbiAgICB9KTtcblxuICAgIC8v0L/QtdGA0LXQutC70Y7Rh9Cw0YLQtdC70Ywg0LvQsNC50LrQvtCyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX19saWtlLWJ0bicpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9saWtlQ2xpY2soKVxuICAgIH0pOyAvL9C/0LXRgNC10LrQu9GO0YfQsNGC0LXQu9GMINC70LDQudC60L7QslxuXG4gICAgLy/Qv9GA0L7RgdC80L7RgtGAINC60LDRgNGC0LjQvdC60Lgg0LIg0L/QvtC/0LDQv9C1XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspXG4gICAgfSk7XG5cbiAgfVxuXG4gIC8v0YHQvtC30LTQsNC10Lwg0Lgg0LfQsNC/0L7Qu9C90Y/QtdC8INC60LDRgNGC0L7Rh9C60YNcbiAgY3JlYXRlQ2FyZCgpIHtcbiAgICAvLyDQl9Cw0L/QuNGI0LXQvCDRgNCw0LfQvNC10YLQutGDINCyINC/0YDQuNCy0LDRgtC90L7QtSDQv9C+0LvQtSBfZWxlbWVudC4g0JTQu9GPINC00L7RgdGC0YPQv9CwINGN0LvQtdC80LXQvdGC0L7QsiDQuiDQvdC10LkuXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICAvLyDQlNC+0LHQsNCy0LjQvCDQtNCw0L3QvdGL0LVcblxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX190aXRsZScpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTsgLy8g0L3QsNC30LLQsNC90LjQtSDQutCw0YDRgtC40L3QutC4ICh0aXRsZSlcblxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlX19pbWFnZScpO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rOyAvL9GB0YHRi9C70LrQsCDQvdCwINC60LDRgNGC0LjQvdC60YNcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTsgLy9hbHQg0L7Qv9C40YHQsNC90LjQtSDQuiDQutCw0YDRgtC40L3QutC1XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoZm9ybXNDb25maWcsIGZvcm1FbGVtZW50KSB7XHJcblxyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGZvcm1zQ29uZmlnLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGZvcm1zQ29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGZvcm1zQ29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBmb3Jtc0NvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gZm9ybXNDb25maWcuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcblxyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuXHJcbiAgfVxyXG5cclxuXHJcbiAgLy8g0YTRg9C90LrRhtC40Y8g0L/QvtC60LDQt9CwINC+0YjQuNCx0LrQuCAo0LrRgNCw0YHQvdGL0Lkg0YLQtdC60YHRgiDQuCDQutGA0LDRgdC90LDRjyDQu9C40L3QuNGPINCyINC/0L7Qu9C1KVxyXG4gIC8vZXJyb3JFbGVtZW50IC0g0Y3RgtC+INGB0L7QvtGC0LLQtdGC0YHQstGD0Y7RidC40Lkg0LrQu9Cw0YHRgSBzcGFuJ2Eg0L7Qv9GA0LXQtNC10LvQtdC90L3QvtCz0L4g0L/QvtC70Y9cclxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXQsIGVycm9yTWVzc2FnZSkgPT4ge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7IC8vINC/0L7QtNC60LvRjtGH0LXQvdC40LUg0LrQu9Cw0YHRgdCwINC00LvRjyDQuNC90L/Rg9GC0LAg0YEg0LrRgNCw0YHQvdC+0Lkg0LvQuNC90LjQtdC5XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7IC8v0YLQtdC60YHRgiDQtNC70Y8g0YHQv9Cw0L3QsCDQuNC3INGB0YLQsNC90LTQsNGA0YLQvdC+0Lkg0LHRgNCw0YPQt9C10YDQvdC+0Lkg0L7RiNC40LHQutC4XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTsgLy8g0LTQtdC70LDQtdC8INGB0L7QvtCx0YnQtdC90LjQtSDQvtGI0LjQsdC60Lgg0LLQuNC00LjQvNGL0Lwg0LTQvtCx0LDQstC70LXQvdC40LXQvCDQutC70LDRgdGB0YMg0Log0LjQvdC/0YPRgtGDXHJcbiAgfVxyXG5cclxuICAvLyDRhNGD0L3QutGG0LjRjyDRgdC60YDRi9GC0LjRjyDQv9C+0LvRjyDRgSDQvtGI0LjQsdC60L7QuSDQuCDQv9C+0LrQsNC30LAg0L7RiNC40LHQutC4XHJcbiAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0KSA9PiB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgfVxyXG5cclxuICAvLyDRhNGD0L3QutGG0LjRjyDQv9GA0L7RhdC+0LbQtNC10L3QuNGPINCy0LDQu9C40LTQsNGG0LjQuCDQv9C+0LvRj1xyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoaW5wdXQpID0+IHtcclxuICAgIGlmICghaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXQsIGlucHV0LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vINGE0YPQvdC60YbQuNGPINC/0YDQvtCy0LXRgNC60Lgg0LjQvdC/0YPRgtC+0LIg0L3QsCDQstCw0LvQuNC00L3QvtGB0YLRjFxyXG4gIF9oYXNJbnZhbGlkSW5wdXQgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy/RhNGD0L3QutGG0LjRjyDQv9C10YDQtdC60LvRjtGH0LXQvdC40Y8g0YHQvtGB0YLQvtC90LjRjyDQutC90L7Qv9C60LhcclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUgPSAoKSA9PiB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fZGlzYWJsZWRTdWJtaXRCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vINC80LXRgtC+0LQg0LTQu9GPINC+0YfQuNGB0YLQutC4INC+0YjQuNCx0L7QuiDQuCDRg9C/0YDQsNCy0LvQtdC90LjRjyDQutC90L7Qv9C60L7QuVxyXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Rpc2FibGVkU3VibWl0QnV0dG9uKCk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0YTRg9C90LrRhtC40Y8g0L7RgtC60LvRjtGH0LXQvdC40Y8g0LrQvdC+0L/QutC4INGB0LDQsdC80LjRgtCwINC/0YDQuCDQvtGC0LrRgNGL0YLQuNC4INC/0L7Qv9Cw0L/QsFxyXG4gIF9kaXNhYmxlZFN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XHJcbiAgfVxyXG5cclxuICAvL9GB0LvRg9GI0LDRgtC10LvRjCDQv9C+0LvQtdC5INGE0L7RgNC8XHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvL9GE0YPQvdC60YbQuNGPINCy0LDQu9C40LTQsNGG0LjQuCDRhNC+0YDQvFxyXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZGlzYWJsZWRTdWJtaXRCdXR0b24oKTtcclxuICB9XHJcblxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pbml0aWFsQXJyYXkgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXJTZWxlY3RvcjtcclxuXHJcbiAgfVxyXG4gIC8v0KHQvtC00LXRgNC20LjRgiDQv9GD0LHQu9C40YfQvdGL0Lkg0LzQtdGC0L7QtCByZW5kZXJJdGVtcywg0LrQvtGC0L7RgNGL0Lkg0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINC+0YLRgNC40YHQvtCy0LrRgyDQstGB0LXRhSDRjdC70LXQvNC10L3RgtC+0LIuXHJcbiAgLy8g0J7RgtGA0LjRgdC+0LLQutCwINC60LDQttC00L7Qs9C+INC+0YLQtNC10LvRjNC90L7Qs9C+INGN0LvQtdC80LXQvdGC0LAg0LTQvtC70LbQvdCwINC+0YHRg9GJ0LXRgdGC0LLQu9GP0YLRjNGB0Y8g0YTRg9C90LrRhtC40LXQuSByZW5kZXJlclxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faW5pdGlhbEFycmF5LmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pOyAvLyDQstGL0LfRi9Cy0LDQtdC8IHJlbmRlcmVyLCDQv9C10YDQtdC00LDQsiBpdGVtXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0KHQvtC00LXRgNC20LjRgiDQv9GD0LHQu9C40YfQvdGL0Lkg0LzQtdGC0L7QtCBhZGRJdGVtLCDQutC+0YLQvtGA0YvQuSDQv9GA0LjQvdC40LzQsNC10YIgRE9NLdGN0LvQtdC80LXQvdGCINC4INC00L7QsdCw0LLQu9GP0LXRgiDQtdCz0L4g0LIg0LrQvtC90YLQtdC50L3QtdGALlxyXG5cclxuICAvL9CjINC60LvQsNGB0YHQsCBTZWN0aW9uINC90LXRgiDRgdCy0L7QtdC5INGA0LDQt9C80LXRgtC60LguINCe0L0g0L/QvtC70YPRh9Cw0LXRgiDRgNCw0LfQvNC10YLQutGDINGH0LXRgNC10Lcg0YTRg9C90LrRhtC40Y4t0LrQvtC70LHRjdC6INC4INCy0YHRgtCw0LLQu9GP0LXRgiDQtdGRINCyINC60L7QvdGC0LXQudC90LXRgC5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5fcG9wdXBDbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnRuJyk7XHJcblxyXG4gIH1cclxuXHJcbiAgLy/Qv9GD0LHQu9C40YfQvdGL0LUg0LzQtdGC0L7QtNGLIG9wZW4g0LggY2xvc2UsINC60L7RgtC+0YDRi9C1INC+0YLQstC10YfQsNGO0YIg0LfQsCDQvtGC0LrRgNGL0YLQuNC1INC4INC30LDQutGA0YvRgtC40LUg0L/QvtC/0LDQv9CwLlxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSlcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpXHJcbiAgfVxyXG5cclxuICAvL9C/0YDQuNCy0LDRgtC90YvQuSDQvNC10YLQvtC0IF9oYW5kbGVFc2NDbG9zZSwg0LrQvtGC0L7RgNGL0Lkg0YHQvtC00LXRgNC20LjRgiDQu9C+0LPQuNC60YMg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAg0LrQu9Cw0LLQuNGI0LXQuSBFc2MuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8g0JfQsNC60YDRi9GC0LjQtSDQv9C+0L/QsNC/0LAg0LrQu9C40LrQvtC8INC90LAg0L7QstC10YDQu9C10LlcclxuICBfY2xvc2VPdmVybGF5KGV2dCkge1xyXG5cclxuICAgIGlmIChldnQudGFyZ2V0ID09PSBldnQuY3VycmVudFRhcmdldCkge1xyXG4gICAgICB0aGlzLmNsb3NlKClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8v0L/Rg9Cx0LvQuNGH0L3Ri9C5INC80LXRgtC+0LQgc2V0RXZlbnRMaXN0ZW5lcnMsINC60L7RgtC+0YDRi9C5INC00L7QsdCw0LLQu9GP0LXRgiDRgdC70YPRiNCw0YLQtdC70Ywg0LrQu9C40LrQsCDQuNC60L7QvdC60LUg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAuXHJcbiAgLy8g0JzQvtC00LDQu9GM0L3QvtC1INC+0LrQvdC+INGC0LDQutC20LUg0LfQsNC60YDRi9Cy0LDQtdGC0YHRjyDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC30LDRgtC10LzQvdGR0L3QvdGD0Y4g0L7QsdC70LDRgdGC0Ywg0LLQvtC60YDRg9CzINGE0L7RgNC80YsuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAvL9GB0LvRg9GI0LDRgtC10LvRjCDQutC70LjQutCwINC40LrQvtC90LrQuCDQt9Cw0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsC5cclxuXHJcbiAgICB0aGlzLl9wb3B1cENsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5jbG9zZSgpKTsgLy8g0LfQsNC60YDRi9C70Lgg0L/QvtC/0LDQvyDQv9C+INC60L3QvtC/0LrQtSDQt9Cw0LrRgNGL0YLQuNGPXHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLl9jbG9zZU92ZXJsYXkuYmluZCh0aGlzKSk7IC8vINC30LDQutGA0YvQu9C4INC/0L7Qv9Cw0L8g0YfQtdGA0LXQtyDQvtCy0LXRgNC70LXQuVxyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcblxuICAgIHRoaXMuX3ByZXZpZXdJbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcbiAgICB0aGlzLl9pbWFnZUNhcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlLWNhcHRpb24nKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX3ByZXZpZXdJbWFnZS5zcmMgPSBsaW5rO1xuICAgIHRoaXMuX3ByZXZpZXdJbWFnZS5hbHQgPSBuYW1lO1xuICAgIHRoaXMuX2ltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XG5cbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cblxuXG59XG5cbi8q0KHQvtC30LTQsNC50YLQtSDQutC70LDRgdGBIFBvcHVwV2l0aEltYWdlLCDQutC+0YLQvtGA0YvQuSDQvdCw0YHQu9C10LTRg9C10YIg0L7RgiBQb3B1cC5cbtCt0YLQvtGCINC60LvQsNGB0YEg0LTQvtC70LbQtdC9INC/0LXRgNC10LfQsNC/0LjRgdGL0LLQsNGC0Ywg0YDQvtC00LjRgtC10LvRjNGB0LrQuNC5INC80LXRgtC+0LQgb3Blbi5cbtCSINC80LXRgtC+0LTQtSBvcGVuINC60LvQsNGB0YHQsCBQb3B1cFdpdGhJbWFnZSDQvdGD0LbQvdC+INCy0YHRgtCw0LLQu9GP0YLRjCDQsiDQv9C+0L/QsNC/INC60LDRgNGC0LjQvdC60YNcbiDRgSBzcmMg0LjQt9C+0LHRgNCw0LbQtdC90LjRjyDQuCDQv9C+0LTQv9C40YHRjNGOINC6INC60LDRgNGC0LjQvdC60LUuKi9cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuLy/QmtGA0L7QvNC1INGB0LXQu9C10LrRgtC+0YDQsCDQv9C+0L/QsNC/0LAg0L/RgNC40L3QuNC80LDQtdGCINCyINC60L7QvdGB0YLRgNGD0LrRgtC+0YAg0LrQvtC70LHRjdC6INGB0LDQsdC80LjRgtCwINGE0L7RgNC80YsuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykpO1xyXG4gIH1cclxuXHJcbiAgLy/QodC+0LTQtdGA0LbQuNGCINC/0YDQuNCy0LDRgtC90YvQuSDQvNC10YLQvtC0IF9nZXRJbnB1dFZhbHVlcywg0LrQvtGC0L7RgNGL0Lkg0YHQvtCx0LjRgNCw0LXRgiDQtNCw0L3QvdGL0LUg0LLRgdC10YUg0L/QvtC70LXQuSDRhNC+0YDQvNGLLlxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIC8vINGB0L7Qt9C00LDRkdC8INC/0YPRgdGC0L7QuSDQvtCx0YrQtdC60YJcclxuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuICAgIC8vINC00L7QsdCw0LLQu9GP0LXQvCDQsiDRjdGC0L7RgiDQvtCx0YrQtdC60YIg0LfQvdCw0YfQtdC90LjRjyDQstGB0LXRhSDQv9C+0LvQtdC5XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xyXG4gIH1cclxuXHJcbiAgLy/Qn9C10YDQtdC30LDQv9C40YHRi9Cy0LDQtdC8INGA0L7QtNC40YLQtdC70YzRgdC60LjQuSDQvNC10YLQvtC0IHNldEV2ZW50TGlzdGVuZXJzXHJcbiAgLy/QntC9INC00L7Qu9C20LXQvSDQvdC1INGC0L7Qu9GM0LrQviDQtNC+0LHQsNCy0LvRj9GC0Ywg0L7QsdGA0LDQsdC+0YLRh9C40Log0LrQu9C40LrQsCDQuNC60L7QvdC60LUg0LfQsNC60YDRi9GC0LjRjyxcclxuICAvLyDQvdC+INC4INC00L7QsdCw0LLQu9GP0YLRjCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdCw0LHQvNC40YLQsCDRhNC+0YDQvNGLLlxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcblxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIC8v0J/QtdGA0LXQt9Cw0L/QuNGB0YvQstCw0LXQvCDRgNC+0LTQuNGC0LXQu9GM0YHQutC40Lkg0LzQtdGC0L7QtCBjbG9zZSwg0YLQsNC6INC60LDQuiDQv9GA0Lgg0LfQsNC60YDRi9GC0LjQuCDQv9C+0L/QsNC/0LAg0YTQvtGA0LzQsCDQtNC+0LvQttC90LAg0LXRidGRINC4INGB0LHRgNCw0YHRi9Cy0LDRgtGM0YHRjy5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcblxyXG4gIH1cclxuXHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3RvcihuYW1lU2VsZWN0b3IsIGluZm9TZWxlY3Rvcikge1xuICAgIHRoaXMuX3VzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX3VzZXJJbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpbmZvU2VsZWN0b3IpO1xuXG4gIH1cblxuICAvL9C80LXRgtC+0LQsINC60L7RgtC+0YDRi9C5INCy0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgiDRgSDQtNCw0L3QvdGL0LzQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8uXG4gIC8vINC/0L7QtNGB0YLQsNCy0LvRj9C10YIg0LTQsNC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQsiDRhNC+0YDQvNGDINC/0YDQuCDQvtGC0LrRgNGL0YLQuNC4LlxuICBnZXRVc2VySW5mbygpIHtcbiAgICBjb25zdCBmb3JtRGF0YSA9IHtcbiAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50LFxuICAgICAgaW5mbzogdGhpcy5fdXNlckluZm8udGV4dENvbnRlbnRcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1EYXRhO1xuXG4gIH1cblxuICAvL9C80LXRgtC+0LQsINC60L7RgtC+0YDRi9C5INC/0YDQuNC90LjQvNCw0LXRgiDQvdC+0LLRi9C1INC00LDQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0Lgg0LTQvtCx0LDQstC70Y/QtdGCINC40YUg0L3QsCDRgdGC0YDQsNC90LjRhtGDLlxuICBzZXRVc2VySW5mbyhkYXRhKSB7XG4gICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fdXNlckluZm8udGV4dENvbnRlbnQgPSBkYXRhLmluZm87XG4gIH1cblxufVxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcblxuaW1wb3J0IHtcbiAgaW5pdGlhbENhcmRzLFxuICBmb3Jtc0NvbmZpZyxcbiAgcHJvZmlsZVBvcHVwLFxuICBlZGl0UHJvZmlsZUJ1dHRvbixcbiAgcHJvZmlsZU5hbWVJbnB1dCxcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQsXG4gIG5ld0NhcmRQb3B1cCxcbiAgbmV3Q2FyZEJ1dHRvbixcbiAgbGlzdEZvckNhcmRzLFxuICBuZXdDYXJkVGl0bGVJbnB1dCxcbiAgbmV3Q2FyZFVybElucHV0LFxufSBmcm9tIFwiLi4vY29tcG9uZW50cy9jb25zdGFudHMuanNcIlxuXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuXG5cbmNvbnN0IHByb2ZpbGVQb3B1cENsYXNzID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF9wcm9maWxlJywgKGRhdGEpID0+IHtcbiAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSk7XG59KTtcblxucHJvZmlsZVBvcHVwQ2xhc3Muc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oJy5wcm9maWxlX19uYW1lJywgJy5wcm9maWxlX19kZXNjcmlwdGlvbicpO1xuXG5jb25zdCBuZXdDYXJkUG9wdXBDbGFzcyA9IG5ldyBQb3B1cFdpdGhGb3JtKCcucG9wdXBfbWVzdG8nLCAoaXRlbSkgPT4ge1xuICBjYXJkc0xpc3QuYWRkSXRlbShjcmVhdGVDYXJkKGl0ZW0pKTtcbn0pO1xuXG5uZXdDYXJkUG9wdXBDbGFzcy5zZXRFdmVudExpc3RlbmVycygpO1xuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t0L/QvtC/0LDQvyDQv9GA0L7RgdC80L7RgtGA0LAg0LrQsNGA0YLQuNC90L7Qui0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBoYW5kbGVDYXJkQ2xpY2sgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF92aWV3Jyk7IC8v0L/QvtC/0LDQvyDQv9GA0L7RgdC80L7RgtGA0LAg0LrQsNGA0YLQuNC90LrQuFxuXG5oYW5kbGVDYXJkQ2xpY2suc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gb3BlblByZXZpZXdQb3B1cChuYW1lLCBsaW5rKSB7XG4gIGhhbmRsZUNhcmRDbGljay5vcGVuKG5hbWUsIGxpbmspO1xufVxuLy8tLS0tLS0tLS0tLS0tLS0t0YHQvtC30LTQsNC90LjQtSDQutCw0YDRgtC+0YfQutC4ICjRjdC60LfQtdC80L/Qu9GP0YAg0LrQu9Cw0YHRgdCwIENhcmQgKSAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCAnLmNhcmQtdGVtcGxhdGUnLCBvcGVuUHJldmlld1BvcHVwKTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmNyZWF0ZUNhcmQoKTtcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG5cbmNvbnN0IGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKHtcbiAgaXRlbXM6IGluaXRpYWxDYXJkcyxcbiAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XG4gICAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoaXRlbSk7XG4gICAgY2FyZHNMaXN0LmFkZEl0ZW0oY2FyZCk7XG5cbiAgfVxufSwgbGlzdEZvckNhcmRzXG4pO1xuXG5jYXJkc0xpc3QucmVuZGVySXRlbXMoKTtcblxuXG4vLy0tLS0tLS0tLS0tLS0tLdC/0L7QtNC60LvRjtGH0LXQvdC40LUg0LLQsNC70LjQtNCw0YbQuNC4INC6INGE0L7RgNC80LUg0L/RgNC+0YTQuNC70Y8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLy0tLS0tLS0tLS0tLS0tLS3Rh9C10YDQtdC3INGB0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIEZvcm1WYWxpZGF0b3ItLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IHByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3Jtc0NvbmZpZywgcHJvZmlsZVBvcHVwKTtcbnByb2ZpbGVWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG4vLy0tLS0tLS0tLS3Qv9C+0LTQutC70Y7Rh9C10L3QuNC1INCy0LDQu9C40LTQsNGG0LjQuCDQuiDRhNC+0YDQvNC1INGB0L7Qt9C00LDQvdC40Y8g0L3QvtCy0L7QuSDQutCw0YDRgtC+0YfQutC4LS0tLS0tLS0tLS0tLS0tLS1cbi8vLS0tLS0tLS0tLS0tLSDRh9C10YDQtdC3INGB0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIEZvcm1WYWxpZGF0b3ItLS0tLS0tLS0tLS0tLS0tLS0tLVxuY29uc3QgbmV3Q2FyZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1zQ29uZmlnLCBuZXdDYXJkUG9wdXApO1xubmV3Q2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t0YHQu9GD0YjQsNGC0LXQu9C4LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL9GB0LvRg9GI0LDRgtC10LvRjCDQvtGC0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L8g0L/RgNC+0YTQuNC70Y8g0L/QviDQutC90L7Qv9C60LUg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRj1xuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHByb2ZpbGVQb3B1cENsYXNzLm9wZW4oKTtcbiAgY29uc3QgdXNlckdldERhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBwcm9maWxlTmFtZUlucHV0LnZhbHVlID0gdXNlckdldERhdGEubmFtZTtcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyR2V0RGF0YS5pbmZvO1xuXG4gIHByb2ZpbGVWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59XG4pO1xuXG4vL9GB0LvRg9GI0LDRgtC10LvRjCDQvtGC0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L8g0YHQvtC30LTQsNC90LjRjyDQvdC+0LLQvtC5INC60LDRgNGC0L7Rh9C60Lgg0L/QviDQutC90L7Qv9C60LVcbm5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIG5ld0NhcmRQb3B1cENsYXNzLm9wZW4oKTtcbiAgbmV3Q2FyZFRpdGxlSW5wdXQudmFsdWUgPSAnJzsgLy/Rh9GC0L7QsdGLINC+0YfQuNGJ0LDQu9C+0YHRjCDQv9C+0LvQtSDQv9GA0Lgg0L7RgtC60YDRi9Cy0LDQvdC40LhcbiAgbmV3Q2FyZFVybElucHV0LnZhbHVlID0gJyc7IC8v0YfRgtC+0LHRiyDQvtGH0LjRidCw0LvQvtGB0Ywg0L/QvtC70LUg0L/RgNC4INC+0YLQutGA0YvQstCw0L3QuNC4XG4gIG5ld0NhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJmb3Jtc0NvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwicHJvZmlsZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInByb2ZpbGVQb3B1cCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlZGl0UHJvZmlsZUJ1dHRvbiIsInByb2ZpbGVOYW1lSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsIm5ld0NhcmRQb3B1cCIsIm5ld0NhcmRCdXR0b24iLCJsaXN0Rm9yQ2FyZHMiLCJuZXdDYXJkVGl0bGVJbnB1dCIsIm5ld0NhcmRVcmxJbnB1dCIsIkNhcmQiLCJkYXRhIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2VsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2RlbGV0ZUNsaWNrIiwiX2xpa2VCdXR0b24iLCJfbGlrZUNsaWNrIiwiX2NhcmRJbWFnZSIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfbmFtZSIsIl9saW5rIiwidGhpcyIsIm5hbWUiLCJsaW5rIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJrZXkiLCJ2YWx1ZSIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJyZW1vdmUiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfZ2V0VGVtcGxhdGUiLCJ0ZXh0Q29udGVudCIsInNyYyIsImFsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9kZWZpbmVQcm9wZXJ0eSIsImlucHV0IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiY29uY2F0IiwiaWQiLCJhZGQiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaW5wdXRMaXN0Iiwic29tZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfZGlzYWJsZWRTdWJtaXRCdXR0b24iLCJfYnV0dG9uRWxlbWVudCIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwicmVtb3ZlQXR0cmlidXRlIiwiZm9yRWFjaCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsIkFycmF5IiwiZnJvbSIsIl90aGlzMiIsInNldEF0dHJpYnV0ZSIsIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2luaXRpYWxBcnJheSIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiX3BvcHVwQ2xvc2VCdXR0b24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0IiwiY2xvc2UiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiX2Nsb3NlT3ZlcmxheSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FsbCIsIl9wcmV2aWV3SW1hZ2UiLCJfaW1hZ2VDYXB0aW9uIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZm9ybSIsIl9mb3JtVmFsdWVzIiwiX3RoaXMzIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJyZXNldCIsIlVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiaW5mb1NlbGVjdG9yIiwiX3VzZXJOYW1lIiwiX3VzZXJJbmZvIiwiaW5mbyIsInByb2ZpbGVQb3B1cENsYXNzIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsInNldEV2ZW50TGlzdGVuZXJzIiwibmV3Q2FyZFBvcHVwQ2xhc3MiLCJjYXJkc0xpc3QiLCJhZGRJdGVtIiwiY3JlYXRlQ2FyZCIsIm9wZW5QcmV2aWV3UG9wdXAiLCJvcGVuIiwiY2FyZCIsInJlbmRlckl0ZW1zIiwicHJvZmlsZVZhbGlkYXRvciIsImVuYWJsZVZhbGlkYXRpb24iLCJuZXdDYXJkVmFsaWRhdG9yIiwidXNlckdldERhdGEiLCJnZXRVc2VySW5mbyIsInJlc2V0VmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=